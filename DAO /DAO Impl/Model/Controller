package com.tap.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.food.DAO.MenuDAO;
import com.food.DaoImpl.MenuDaoImpl;
import com.food.model.Cart;
import com.food.model.CartItem;
import com.food.model.Menu;


@WebServlet("/CartServlet")
public class CartServlet extends HttpServlet {
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		Cart cart=(Cart)session.getAttribute("cart");
		if(cart==null) {
			cart=new Cart();
			session.setAttribute("cart", cart);
		}
		String action=request.getParameter("action");
		if("add".equals(action)) {
			addItemToCart(request, cart);
		}
		else if("update".equals(action)) {
			updateCartItem(request, cart);
		}
		else if("remove".equals(action)) {
			removeItemFromCart(request, cart);
		}
		session.setAttribute("cart", cart);
		response.sendRedirect("Cart.jsp");
	}
	
	private void addItemToCart(HttpServletRequest request, Cart cart) {
	   int itemId=Integer.parseInt(request.getParameter("itemId"));
	   int quantity=Integer.parseInt(request.getParameter("quantity"));
		
	   MenuDAO menuDAO=new MenuDaoImpl();
	   Menu menuItem= menuDAO.getMenuById(itemId);
	   
	   HttpSession session = request.getSession();
		session.setAttribute("restaurentId",menuItem.getRestaurentId());
		
		if(menuItem !=null) {
			CartItem item=new CartItem(
					menuItem.getMenuId(),
					menuItem.getRestaurentId(),
					menuItem.getItemName(),
					quantity,
					menuItem.getPrice()
					);
		cart.addItem(item);
		}
	}
       private void updateCartItem(HttpServletRequest request, Cart cart) {
		int itemId = Integer.parseInt(request.getParameter("itemId"));
		int quantity = Integer.parseInt(request.getParameter("quantity"));
       // Update the quantity of the specified item in the cart
		if (quantity > 0) {
            cart.updateItem(itemId, quantity); // Update item quantity
        } else {
            cart.removeItem(itemId); // Remove item if quantity is zero
        }
	}

	private void removeItemFromCart(HttpServletRequest request, Cart cart) {
		int itemId = Integer.parseInt(request.getParameter("itemId"));
		// Remove the specified item from the cart
		cart.removeItem(itemId);
		
	}

}
